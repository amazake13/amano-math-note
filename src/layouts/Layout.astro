---
import { PUBLIC_GA_TRACKING_ID, ENABLE_LIGHTBOX } from '@/server-constants.ts'
import { getDatabase } from '@/lib/notion/client.ts'
import { getNavLink, getStaticFilePath, filePath } from '@/lib/blog-helpers.ts'
import '@/styles/syntax-coloring.css'
import GoogleAnalytics from '@/components/GoogleAnalytics.astro'
import SearchModal from '@/components/SearchModal.astro'
import SearchButton from '@/components/SearchButton.astro'
import '@/styles/global.css'
import type { Emoji, FileObject } from '@/lib/interfaces'

export interface Props {
  title: string
  description?: string
  path: string
  ogImage?: string
}

const { title = '', description = '', path = '/', ogImage = '' } = Astro.props

const database = await getDatabase()

const siteTitle = title ? `${title} - ${database.Title}` : database.Title
const siteDescription = description ? description : database.Description
const siteURL = new URL(getNavLink(path), Astro.site).toString()
const siteOGImage = new URL(
  getStaticFilePath('/default-og-image.png'),
  Astro.site
)

let coverImageURL: string
if (database.Cover) {
  if (database.Cover.Type === 'external') {
    coverImageURL = database.Cover.Url
  } else if (database.Cover.Type === 'file') {
    try {
      coverImageURL = filePath(new URL(database.Cover.Url))
    } catch (err) {
      console.log('Invalid DB cover image URL')
    }
  }
}

let customIconURL: string = ''
if (database.Icon && database.Icon.Type === 'file') {
  try {
    customIconURL = filePath(new URL((database.Icon as FileObject).Url))
  } catch (err) {
    console.log('Invalid DB custom icon URL')
  }
}
---

<!doctype html>
<html lang="en" prefix="og: https://ogp.me/ns#">
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="robots" content="max-image-preview:large" />
    <meta charset="UTF-8" />
    <meta name="generator" content={Astro.generator} />
    <title>{siteTitle}</title>
    <meta name="description" content={siteDescription} />
    <link rel="canonical" href={siteURL} />
    <meta property="og:url" content={siteURL} />
    <meta property="og:title" content={siteTitle} />
    <meta property="og:description" content={siteDescription} />
    <meta property="og:site_name" content={database.Title} />
    <meta property="og:image" content={ogImage || siteOGImage} />
    <meta name="twitter:title" content={siteTitle} />
    <meta name="twitter:description" content={siteDescription} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:image" content={ogImage || siteOGImage} />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.css"
      integrity="sha384-vKruj+a13U8yHIkAyGgK1J3ArTLzrFGBbBc0tDp4ad/EyewESeXE/Iv67Aj8gKZ0"
      crossorigin="anonymous"
    />
    <link href="themes/prism-solarized-dark-atom.css" />
  </head>
  <body class="min-h-screen bg-gray-100">
    <GoogleAnalytics trackingId={PUBLIC_GA_TRACKING_ID} />
    <header class="bg-white shadow">
      <div
        class="container mx-auto px-4 py-6 flex flex-col md:flex-row items-center justify-between"
      >
        <h1 class="text-3xl font-bold mb-4 md:mb-0 max-w-full">
          <a
            href={getNavLink('/posts')}
            class="flex items-center space-x-2 max-w-full"
          >
            {
              database.Icon && database.Icon.Type === 'emoji' ? (
                <>
                  <span class="inline-block w-8 h-8 align-middle">
                    {(database.Icon as Emoji).Emoji}
                  </span>
                  <span class="align-middle">{database.Title}</span>
                </>
              ) : database.Icon && database.Icon.Type === 'external' ? (
                <>
                  <img
                    src={(database.Icon as FileObject).Url}
                    alt="Site icon image"
                    class="inline-block w-8 h-8 align-middle"
                  />
                  <span class="align-middle">{database.Title}</span>
                </>
              ) : database.Icon && database.Icon.Type === 'file' ? (
                <>
                  <img
                    src={customIconURL}
                    class="inline-block w-8 h-8 align-middle"
                    alt="Site icon image"
                  />
                  <span class="align-middle">{database.Title}</span>
                </>
              ) : (
                <span class="max-w-full">{database.Title}</span>
              )
            }
          </a>
        </h1>
        <div class="description max-w-full">
          {database.Description}
        </div>
      </div>
    </header>
    <slot name="main" />
    <footer>
      <div>
        <span>Powered by&nbsp;</span>
        <a href="https://github.com/otoyo/astro-notion-blog"
          >astro-notion-blog</a
        >
      </div>
    </footer>

    <SearchModal />
    {
      ENABLE_LIGHTBOX && (
        <script src={getStaticFilePath('/scripts/fslightbox.js')} />
      )
    }
  </body>
</html>
