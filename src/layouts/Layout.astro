---
import { PUBLIC_GA_TRACKING_ID } from '@/server-constants.ts'
import { getDatabase } from '@/lib/notion/client.ts'
import { getNavLink, getStaticFilePath, filePath } from '@/lib/blog-helpers.ts'
import '@/styles/syntax-coloring.css'
import GoogleAnalytics from '@/components/GoogleAnalytics.astro'
import '@/styles/global.css'
import type { Emoji, FileObject } from '@/lib/interfaces'
import Footer from '@/components/Footer.astro'
import 'katex/dist/katex.min.css'
import { ThemeToggle } from '@/components/theme-toggle'
import ThemeScript from '@/components/theme-script.astro'
import { Tag, Github } from 'lucide-astro'

export interface Props {
  title: string
  description?: string
  path: string
  ogImage?: string
}

const { title = '', description = '', path = '/', ogImage = '' } = Astro.props

const database = await getDatabase()

const siteTitle = title ? `${title} - ${database.Title}` : database.Title
const siteDescription = description ? description : database.Description
const siteURL = new URL(getNavLink(path), Astro.site).toString()
const siteOGImage = new URL(
  getStaticFilePath('/default-og-image.png'),
  Astro.site
)

let customIconURL: string = ''
if (database.Icon && database.Icon.Type === 'file') {
  try {
    customIconURL = filePath(new URL((database.Icon as FileObject).Url))
  } catch (err) {
    console.log('Invalid DB custom icon URL')
  }
}
---

<!doctype html>
<html lang="en" prefix="og: https://ogp.me/ns#">
  <head>
    <ThemeScript />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="robots" content="max-image-preview:large" />
    <meta charset="UTF-8" />
    <meta name="generator" content={Astro.generator} />
    <title>{siteTitle}</title>
    <meta name="description" content={siteDescription} />
    <link rel="canonical" href={siteURL} />
    <meta property="og:url" content={siteURL} />
    <meta property="og:title" content={siteTitle} />
    <meta property="og:description" content={siteDescription} />
    <meta property="og:site_name" content={database.Title} />
    <meta property="og:image" content={ogImage || siteOGImage} />
    <meta name="twitter:title" content={siteTitle} />
    <meta name="twitter:description" content={siteDescription} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:image" content={ogImage || siteOGImage} />
  </head>
  <body class="min-h-screen bg-background text-foreground">
    <GoogleAnalytics trackingId={PUBLIC_GA_TRACKING_ID} />
    <header
      class="sticky top-0 z-50 w-full border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60"
    >
      <div class="container mx-auto px-4">
        <div class="flex h-16 items-center justify-between">
          <div class="flex flex-col justify-center">
            <a
              href={getNavLink('/')}
              class="flex items-center gap-3 transition-colors hover:text-foreground/80"
            >
              {
                database.Icon && database.Icon.Type === 'emoji' ? (
                  <span class="text-2xl">{(database.Icon as Emoji).Emoji}</span>
                ) : database.Icon && database.Icon.Type === 'external' ? (
                  <img
                    src={(database.Icon as FileObject).Url}
                    alt="Site icon"
                    class="h-8 w-8"
                  />
                ) : database.Icon && database.Icon.Type === 'file' ? (
                  <img src={customIconURL} alt="Site icon" class="h-8 w-8" />
                ) : null
              }
              <div class="flex flex-col">
                <span class="text-xl font-medium leading-tight"
                  >{database.Title}</span
                >
                <p class="hidden md:block text-sm text-muted-foreground">
                  {database.Description}
                </p>
              </div>
            </a>
          </div>

          <div class="flex items-center gap-4">
            <a
              href={getNavLink('/posts/tag')}
              class="flex items-center gap-1 transition-colors hover:text-foreground/80"
            >
              <Tag class="h-5 w-5 transition-colors" />
              <span class="hidden sm:inline text-sm">Tags</span>
            </a>
            <a
              href="https://github.com/amazake13"
              class="flex items-center gap-1 transition-colors hover:text-foreground/80"
            >
              <Github class="h-5 w-5 transition-colors" />
              <span class="hidden sm:inline text-sm">About</span>
            </a>
            <ThemeToggle client:load />
          </div>
        </div>
      </div>
    </header>
    <slot name="main" />
    <Footer />
  </body>
</html>
