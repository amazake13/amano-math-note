---
import * as interfaces from '@/lib/interfaces'
import Caption from './Caption.astro'
import { Code as AstroCode } from 'astro:components'
import type { BundledLanguage } from 'shiki/dist/langs.d.mts'

export interface Props {
  block: interfaces.Block & { Code: interfaces.Code }
}

const { block } = Astro.props

const code = block.Code.RichTexts.map(
  (richText: interfaces.RichText) => richText.Text?.Content || ''
).join('')

const language = block.Code.Language.toLowerCase() as BundledLanguage
---

<div class="group relative my-4">
  {
    language === 'mermaid' ? (
      <div class="mermaid bg-background p-4">{code}</div>
    ) : (
        <div class="absolute right-4 top-4 z-10 opacity-0 transition-opacity group-hover:opacity-100">
          <button
            class="copy-button inline-flex h-8 w-8 items-center justify-center rounded-md bg-[#eee8d5]/80 dark:bg-[#073642]/80 text-sm font-medium text-[#586e75] dark:text-[#93a1a1] transition-colors hover:bg-[#eee8d5] dark:hover:bg-[#586e75]/80 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[#268bd2] focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50"
            data-code={code}
            aria-label="Copy code"
          >
            <span class="h-4 w-4 flex items-center justify-center">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="16"
                height="16"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="copy-icon"
              >
                <rect width="14" height="14" x="8" y="8" rx="2" ry="2" />
                <path d="M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2" />
              </svg>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="16"
                height="16"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="check-icon hidden"
              >
                <polyline points="20 6 9 17 4 12" />
              </svg>
            </span>
          </button>
        </div>
        <AstroCode 
          code={code} 
          lang={language}
          themes={{
            light: 'solarized-light',
            dark: 'solarized-dark'
          }}
        />
    )
  }
  <Caption richTexts={block.Code.Caption} />
</div>

<script>
  import mermaid from 'mermaid'

  // mermaidの初期設定
  mermaid.initialize({
    startOnLoad: true,
    theme: document.documentElement.classList.contains('dark')
      ? 'dark'
      : 'default',
    darkMode: document.documentElement.classList.contains('dark'),
    fontFamily: 'var(--font-sans)',
  })

  // コピーボタンの機能
  const copyButtons = document.querySelectorAll('.copy-button')
  copyButtons.forEach((button) => {
    button.addEventListener('click', async () => {
      const code = button.getAttribute('data-code')
      const copyIcon = button.querySelector('.copy-icon')
      const checkIcon = button.querySelector('.check-icon')

      if (!code) return

      try {
        await navigator.clipboard.writeText(code)
        copyIcon?.classList.add('hidden')
        checkIcon?.classList.remove('hidden')
        setTimeout(() => {
          copyIcon?.classList.remove('hidden')
          checkIcon?.classList.add('hidden')
        }, 2000)
      } catch (err) {
        console.error('Failed to copy code:', err)
      }
    })
  })
</script>
