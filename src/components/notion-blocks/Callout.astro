---
import * as interfaces from '../../lib/interfaces.ts'
import { snakeToKebab } from '../../lib/style-helpers.ts'
import RichText from './RichText.astro'
import NotionBlocks from '../NotionBlocks.astro'

export interface Props {
  block: interfaces.Block & { Callout: interfaces.Callout }
  headings: interfaces.Block[]
}

const { block, headings } = Astro.props
---

<div class="my-4 flex items-baseline gap-4 rounded-lg border bg-muted/50 p-4">
  {
    block.Callout.Icon && (
      <div class="flex items-center h-[1em] flex-shrink-0">
        {block.Callout.Icon.Type === 'emoji' ? (
          'Emoji' in block.Callout.Icon && block.Callout.Icon.Emoji
        ) : block.Callout.Icon.Type === 'external' ? (
          <img
            src={'Url' in block.Callout.Icon ? block.Callout.Icon.Url : ''}
            alt="Icon in a callout block"
            class="h-[1em] w-[1em] !my-0"
          />
        ) : null}
      </div>
    )
  }
  <div class="min-w-0 flex-1">
    {
      block.Callout.RichTexts.map((richText: interfaces.RichText) => (
        <RichText richText={richText} />
      ))
    }
    {
      block.Callout.Children && (
        <NotionBlocks
          blocks={block.Callout.Children}
          headings={headings}
          isRoot={false}
          level={1}
        />
      )
    }
  </div>
</div>
