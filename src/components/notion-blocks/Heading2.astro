---
import * as interfaces from '../../lib/interfaces.ts'
import { buildHeadingId } from '../../lib/blog-helpers.ts'
import RichText from './RichText.astro'
import NotionBlocks from '../NotionBlocks.astro'

export interface Props {
  block: interfaces.Block & { Heading2: interfaces.Heading2 }
  headings: interfaces.Block[]
}

const { block, headings } = Astro.props

const id = buildHeadingId(block.Heading2)
---

{
  block.Heading2.IsToggleable ? (
    <details class="group mt-6 sm:mt-4 scroll-mt-20" id={id}>
      <summary class="cursor-pointer">
        <div class="group/heading relative inline-block">
          <h4 class="inline text-[1.5rem] sm:text-[1.2rem] text-foreground my-[0.3em]">
            {block.Heading2.RichTexts.map((richText: interfaces.RichText) => (
              <RichText richText={richText} />
            ))}
          </h4>
          <a
            href={`#${id}`}
            class="absolute -left-6 top-1/2 -translate-y-1/2 opacity-0 group-hover/heading:opacity-100 transition-opacity no-underline cursor-pointer"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="20"
              height="20"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="text-muted-foreground hover:text-foreground"
            >
              <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" />
              <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" />
            </svg>
          </a>
        </div>
      </summary>
      <div class="ml-4">
        {block.Heading2.Children && (
          <NotionBlocks
            blocks={block.Heading2.Children}
            headings={headings}
            isRoot={false}
            level={2}
          />
        )}
      </div>
    </details>
  ) : (
    <div
      class="group/heading relative inline-block mt-6 sm:mt-4 scroll-mt-20"
      id={id}
    >
      <h4 class="inline text-[1.5rem] sm:text-[1.2rem] text-foreground my-[0.3em]">
        {block.Heading2.RichTexts.map((richText: interfaces.RichText) => (
          <RichText richText={richText} />
        ))}
      </h4>
      <a
        href={`#${id}`}
        class="absolute -left-6 top-1/2 -translate-y-1/2 opacity-0 group-hover/heading:opacity-100 transition-opacity no-underline cursor-pointer"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="20"
          height="20"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="text-muted-foreground hover:text-foreground"
        >
          <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" />
          <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" />
        </svg>
      </a>
    </div>
  )
}

<style>
  h4 {
    margin: 1em 0 0.3em;
    color: var(--fg);
    font-size: 1.5rem;
  }
  @media (max-width: 640px) {
    h4 {
      font-size: 1.2rem;
    }
  }

  .toggle {
    margin: 1.6rem 0 0;
  }
  @media (max-width: 640px) {
    .toggle {
      margin: 1.2rem 0 0;
    }
  }

  .toggle > summary {
    cursor: pointer;
  }

  .toggle > summary > a {
    display: inline;
  }

  .toggle > summary > a > h4 {
    display: inline;
  }

  .toggle > div {
    margin-left: 1em;
  }
</style>
