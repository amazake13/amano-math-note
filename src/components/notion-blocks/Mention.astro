---
import type { Post, Emoji, FileObject } from '../../lib/interfaces.ts'
import { getPostByPageId } from '../../lib/notion/client'
import { getPostLink } from '../../lib/blog-helpers.ts'
import '../../styles/notion-color.css'
import arrow from '../../images/icon-arrow-link.svg'

export interface Props {
  pageId: string
}

const { pageId } = Astro.props

let post: Post | null = null
if (pageId) {
  post = await getPostByPageId(pageId)
}
---

{
  post ? (
    <a
      href={getPostLink(post.Slug)}
      class="inline-flex items-center gap-1.5 font-medium text-muted-foreground hover:text-foreground transition-colors"
    >
      {post.Icon?.Type === 'emoji' ? (
        <span class="text-base leading-none">{(post.Icon as Emoji).Emoji}</span>
      ) : post.Icon?.Type === 'external' ? (
        <img src={(post.Icon as FileObject).Url} class="w-4 h-4" alt="" />
      ) : (
        <span class="text-base leading-none">ðŸ“„</span>
      )}
      <span class="underline underline-offset-4">{post.Title}</span>
      <img src={arrow.src} class="w-3 h-3" alt="" />
    </a>
  ) : (
    <span class="inline-flex items-center gap-1.5 text-muted-foreground">
      <span class="text-base leading-none">ðŸš«</span>
      <span>Post not found</span>
      <img src={arrow.src} class="w-3 h-3" alt="" />
    </span>
  )
}

<style>
  a.link {
    display: inline-flex;
    font-weight: 600;
    gap: 4px;
  }
  span.icon {
    height: fit-content;
    flex-shrink: 0;
    position: relative;
  }
  span.icon img.notion-icon {
    width: 1.3em;
    height: 1.3rem;
    vertical-align: sub;
    flex-shrink: 0;
    position: relative;
  }
  span.icon img.icon-link {
    display: block;
    position: absolute;
    top: 1em;
    right: 0;
    width: 8px;
    height: 8px;
  }
  span.text {
    color: var(--fg);
    font-weight: 500;
    text-decoration: underline;
  }
  span.text.not-found {
    font-weight: normal;
    text-decoration: none;
  }
</style>
