---
import type { Post, SelectProperty } from '@/lib/interfaces.ts'
import { getRankedPosts, getAllTags, getAllPosts } from '@/lib/notion/client.ts'
import Layout from '@/layouts/Layout.astro'
import NoContents from '@/components/NoContents.astro'
import PostDate from '@/components/PostDate.astro'
import PostTags from '@/components/PostTags.astro'
import PostTitle from '@/components/PostTitle.astro'
import PostFeaturedImage from '@/components/PostFeaturedImage.astro'
import PostExcerpt from '@/components/PostExcerpt.astro'
import ReadMoreLink from '@/components/ReadMoreLink.astro'
import Pagination from '@/components/Pagination.astro'
import '@/styles/notion-color.css'

export async function getStaticPaths({ paginate }) {
  const allTags = await getAllTags()
  const allPosts = await getAllPosts()

  return allTags.flatMap((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.Tags.some((t) => t.name === tag.name)
    )
    return paginate(filteredPosts, {
      params: { tag: tag.name },
      pageSize: 10,
    })
  })
}

const { tag } = Astro.params
const { page } = Astro.props

const { currentPage, lastPage } = page
const currentTag =
  page.data && page.data[0]
    ? (page.data[0].Tags.find(
        (t: { name: any }) => t.name === tag
      ) as SelectProperty)
    : null
---

<Layout
  title={`Posts in ${tag} ${currentPage}/${lastPage}`}
  path={`/posts/tag/${tag}/${currentPage}`}
>
  <div slot="main" class="container mx-auto px-4">
    <header>
      <div>
        <span class={`tag ${currentTag ? currentTag.color : ''}`}>{tag}</span>
      </div>
    </header>

    {
      page.data ? (
        page.data.map((post: Post) => (
          <div>
            <PostDate post={post} />
            <PostTags post={post} />
            <PostTitle post={post} />
            <PostFeaturedImage post={post} />
            <PostExcerpt post={post} />
            <ReadMoreLink post={post} />
          </div>
        ))
      ) : (
        <NoContents />
      )
    }

    <footer>
      {page.data ? <Pagination {...page} /> : null}
    </footer>
  </div>
</Layout>
