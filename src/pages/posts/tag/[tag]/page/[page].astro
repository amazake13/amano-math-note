---
import type { SelectProperty } from '@/lib/interfaces.ts'
import { getRankedPosts, getAllTags, getAllPosts } from '@/lib/notion/client.ts'
import Layout from '@/layouts/Layout.astro'
import NoContents from '@/components/NoContents.astro'
import PostDate from '@/components/PostDate.astro'
import PostTags from '@/components/PostTags.astro'
import PostTitle from '@/components/PostTitle.astro'
import PostFeaturedImage from '@/components/PostFeaturedImage.astro'
import PostExcerpt from '@/components/PostExcerpt.astro'
import ReadMoreLink from '@/components/ReadMoreLink.astro'
import Pagination from '@/components/Pagination.astro'
import styles from '../../../../../styles/blog.module.css'
import '../../../../../styles/notion-color.css'

export async function getStaticPaths({ paginate }) {
  const allTags = await getAllTags()
  const allPosts = await getAllPosts()

  return allTags.flatMap((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.Tags.some((t) => t.name === tag.name)
    )
    return paginate(filteredPosts, {
      params: { tag: tag.name },
      pageSize: 10,
    })
  })
}

const { tag } = Astro.params
const { page } = Astro.props

const { currentPage, lastPage } = page
const currentTag =
  page.data && page.data[0]
    ? (page.data[0].Tags.find((t) => t.name === tag) as SelectProperty)
    : null
---

<Layout
  title={`Posts in ${tag} ${currentPage}/${lastPage}`}
  path={`/posts/tag/${tag}/page/${currentPage}`}
>
  <div slot="main" class={styles.main}>
    <header>
      <div class="tag-container">
        <span class={`tag ${currentTag ? currentTag.color : ''}`}>{tag}</span>
      </div>
    </header>

    {
      page.data ? (
        page.data.map((post) => (
          <div class={styles.post} key={post.Slug}>
            <PostDate post={post} />
            <PostTags post={post} />
            <PostTitle post={post} />
            <PostFeaturedImage post={post} />
            <PostExcerpt post={post} />
            <ReadMoreLink post={post} />
          </div>
        ))
      ) : (
        <NoContents />
      )
    }

    <footer>
      {page.data ? <Pagination {...page} /> : null}
    </footer>
  </div>
</Layout>

<style>
  .tag-container {
    margin: 0;
    line-height: 1.3;
    font-size: 1.2rem;
    font-weight: normal;
  }
  @media (max-width: 640px) {
    .tag-container {
      font-size: 1.15rem;
    }
  }
  .tag-container span.tag {
    border-radius: 4px;
    padding: 3px 9px;
    background: var(--tag-bg-light-gray);
  }
</style>
